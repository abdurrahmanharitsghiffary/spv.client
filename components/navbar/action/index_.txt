"use client";
import { AppRouterInstance } from "next/dist/shared/lib/app-router-context.shared-runtime";
import React, { Suspense, useEffect, useState } from "react";
import { navActionItems } from "./items";
import ChatButton from "@/components/button/chat-button";
import clsx from "clsx";
import { getNavActionItem } from "./utils";
import UserAvatar from "../user-avatar";
import { useIsMd } from "@/hooks/use-media-query";
import Search from "@/components/search";

export default function NavActions({
  pathname,
  router,
}: {
  pathname: string;
  router: AppRouterInstance;
}) {
  const [isMounted, setIsMounted] = useState(false);
  const item = getNavActionItem(navActionItems, pathname);
  const isMd = useIsMd();

  useEffect(() => {
    setIsMounted(true);
  }, []);

  if (item?.action === null || !isMounted) return null;

  const isWithParams = pathname.includes("chats/");

  const isShowSearchBar = !pathname.includes("/search") || !isMd;

  return (
    <div
      style={item?.style}
      className={clsx(
        "grid w-full px-4 grid-flow-col text-[1.25rem]",
        item ? "content-between" : "content-end",
        item?.className ?? "",
        "md:justify-end",
        isWithParams && "!justify-normal"
      )}
    >
      {(!isMd || item?.isMd) && item?.action(router)}
      {(!item || isMd) && !item?.isMd && (
        <div className="w-full place-self-end flex gap-2 justify-between items-center">
          {isShowSearchBar && (
            <Suspense>
              <Search wrapperClassName="!w-auto" />
            </Suspense>
          )}
          <div className="flex gap-2 ml-auto items-center">
            <ChatButton />
            <UserAvatar />
          </div>
        </div>
      )}
    </div>
  );
}
